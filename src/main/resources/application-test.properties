#
# /*******************************************************************************
#  * Copyright 2020 (C) N*able
#  * workflow
#  * @author Tharanga Rajapaksha
#  * H2 or Postgress configuration for local testings
#  *******************************************************************************/
#

# ===============================
# = APPLICATION SERVER
# ===============================

spring.application.name=SpringBoot_MicroService_TemplateProject
server.port=8888
management.server.port=0
# ===============================
# = DATA SOURCE
# ===============================
### Define H2 Datasource configurations
spring.datasource.platform=h2
#spring.datasource.url=jdbc:h2:mem:SAMESB;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url=jdbc:h2:tcp://localhost/~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# if you want to persist data for testing perposes use bellow one.
#spring.datasource.url=jdbc:h2:~/samesb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# If you want to persisst data use bellow configuration. Good for Testing perposes also
spring.datasource.initialize=false
spring.datasource.url=jdbc:h2:file:~/samesb;DB_CLOSE_ON_EXIT=FALSE;IFEXISTS=TRUE;DB_CLOSE_DELAY=-1;
 

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
### Enable H2 Console Access 
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.properties.hibernate.default_schema=sb_oc_cor_wf

# Set here configurations for the database connection
#spring.datasource.initialization-mode=always
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/SAMESB
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.username=dbuser
#spring.datasource.password=dbuserpass
# Allows Hibernate to generate SQL optimized for a particular DBMS
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = JPA / HIBERNATE
# ===============================

# to avoide "Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented" error
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto = update
# For testing perposes
spring.jpa.hibernate.ddl-auto = update
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql=true

# Naming strategy ( Requied for postgress )
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy



spring.main.allow-bean-definition-overriding=true

#Datasource naming
spring.jmx.default-domain = SampathCoreWorkflowService

## logging level
#logging.level.org.springframework=ERROR
#logging.level.biz.nable.sb.cor.comp=DEBUG



add.workFlow.approval.url = http://localhost:8084/validate/approver/{p}
#Datasource naming
spring.jmx.default-domain = SampathWorkFlow

cron.expression.invokerule = 0 0/1 * * * ?
cron.expression.populateworkflow = 0 0/1 * * * ?


corporate.bill.payment.path = http://10.30.2.111:9081/inst/v1/client/webhook
#corporate.bill.payment.path = http://10.30.2.111:9081/cobp/corporateBillPayment/approveOrReject/
#corporate.bill.payment.path = http://192.125.125.111:9081/cobp/corporateBillPayment/approveOrReject/

#create.approval.url=http://10.30.2.111:9081/apprv/v1/approval
#create.approval.url=http://localhost:8080/v1/approval
#http://10.30.2.111:9081/apprv/v2/api-docs
system.find.init.date=1900-01-01

#create.approval.url=http://localhost:9081/apprv/v1/approval


nable.biz.common.util.workflow.service.url=http://localhost:8080/
nable.biz.common.util.approval.service.url = http://10.30.2.111:9081/apprv
#nable.biz.common.util.approval.service.url = http://localhost:8181

transfer.validation.microservice.url=http://localhost:8080/validate/approver
