# ===============================
# = APPLICATION SERVER
# ===============================
server.port=8083
spring.application.name=workflow-microservice
# login configuration
# Log Level: ERROR, WARN, INFO, DEBUG, or TRACE.
#logging.config=classpath:log4j2-local.xml
#   logging.config=classpath:log4j2.xml
# Sping framework debug will show request and respose also
# What ever you write down hear for logging will override your logging config file's configurations.
#logging.level.org.springframework.web=DEBUG
#   logging.level.root=ERROR
#logging.level.biz.nable.sampath.oc.controller.GroupController=TRACE
#    logging.level.biz.nable.sampath.oc=INFO
#logging.level.org.hibernate=ERROR
#logging.level.biz.nable=DEBUG
#   log4j.rootLogger=debug,A1
#log4j.skipJansi=false

#logging.file=myapp.log
# ===============================
# =DATA SOURCE
# ===============================

#Enable Actuator https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env,beans

#spring.datasource.url=jdbc:h2:mem:SAMESB;DB_CLOSE_DELAY=-1
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true

#spring.datasource.url=jdbc:db2://192.125.125.35:50000/SAMESB
#spring.datasource.username=db2esb1
#spring.datasource.password=db2esb2

spring.datasource.url=jdbc:db2://10.30.2.35:50000/SAMESB
spring.datasource.username=db2esb1
spring.datasource.password=db2esb2
#spring.datasource.jndi-name=jdbc/OCDBDS

spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
spring.jpa.properties.hibernate.default_schema=SB_OC_COR_WF

#Datasource naming
spring.jmx.default-domain = SampathWorkFlow

#At second :00, every minute starting at minute :00, of every hour
#cron.expression.invokerule = 0 0/1 * * * ?
#At second :00, every minute starting at minute :00, of every hour
#cron.expression.populateworkflow = 0 0/1 * * * ?

#corporate.bill.payment.path = http://192.125.125.111:9081/cobp/corporateBillPayment/approveOrReject/
#corporate.bill.payment.path = http://10.30.2.111:9081/cobp/corporateBillPayment/approveOrReject/

nable.biz.common.util.workflow.service.url=http://localhost:8083/
nable.biz.common.util.approval.service.url = http://10.30.2.111:9081/apprv

system.find.init.date=1900-01-01
